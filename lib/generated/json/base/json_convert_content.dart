// ignore_for_file: non_constant_identifier_names
// ignore_for_file: camel_case_types
// ignore_for_file: prefer_single_quotes

// This file is automatically generated. DO NOT EDIT, all your changes would be lost.
import 'package:tob/entity/tab_purchase/car_file_list_entity.dart';
import 'package:tob/generated/json/car_file_list_entity_helper.dart';
import 'package:tob/entity/bank/bank_account_entity.dart';
import 'package:tob/generated/json/bank_account_entity_helper.dart';
import 'package:tob/entity/home_data_entity.dart';
import 'package:tob/generated/json/home_data_entity_helper.dart';
import 'package:tob/entity/order/order_detail_entity.dart';
import 'package:tob/generated/json/order_detail_entity_helper.dart';
import 'package:tob/entity/address/address_single_entity.dart';
import 'package:tob/generated/json/address_single_entity_helper.dart';
import 'package:tob/entity/purchase/purchase_file_entity.dart';
import 'package:tob/generated/json/purchase_file_entity_helper.dart';
import 'package:tob/entity/city/city_chose_entity.dart';
import 'package:tob/generated/json/city_chose_entity_helper.dart';
import 'package:tob/entity/img_entity.dart';
import 'package:tob/generated/json/img_entity_helper.dart';
import 'package:tob/entity/base_info_entity.dart';
import 'package:tob/generated/json/base_info_entity_helper.dart';
import 'package:tob/entity/staff/staff_list_entity.dart';
import 'package:tob/generated/json/staff_list_entity_helper.dart';
import 'package:tob/entity/notice/notice_list_entity.dart';
import 'package:tob/generated/json/notice_list_entity_helper.dart';
import 'package:tob/entity/notice/notice_detail_entity.dart';
import 'package:tob/generated/json/notice_detail_entity_helper.dart';
import 'package:tob/entity/company_entity.dart';
import 'package:tob/generated/json/company_entity_helper.dart';
import 'package:tob/entity/tab_purchase/car_file_detail_entity.dart';
import 'package:tob/generated/json/car_file_detail_entity_helper.dart';
import 'package:tob/entity/purchase/purchase_detail_entity.dart';
import 'package:tob/generated/json/purchase_detail_entity_helper.dart';
import 'package:tob/entity/sms_entity.dart';
import 'package:tob/generated/json/sms_entity_helper.dart';
import 'package:tob/entity/purchase/purchase_file_list_entity.dart';
import 'package:tob/generated/json/purchase_file_list_entity_helper.dart';
import 'package:tob/entity/purchase/purchase_list_entity.dart';
import 'package:tob/generated/json/purchase_list_entity_helper.dart';
import 'package:tob/entity/tab_purchase/car_receive_detail_entity.dart';
import 'package:tob/generated/json/car_receive_detail_entity_helper.dart';
import 'package:tob/entity/update/update_entity.dart';
import 'package:tob/generated/json/update_entity_helper.dart';
import 'package:tob/entity/tab_purchase/contract_entity.dart';
import 'package:tob/generated/json/contract_entity_helper.dart';
import 'package:tob/entity/bank_entity.dart';
import 'package:tob/generated/json/bank_entity_helper.dart';
import 'package:tob/entity/base_data_entity.dart';
import 'package:tob/generated/json/base_data_entity_helper.dart';
import 'package:tob/entity/base_list_entity.dart';
import 'package:tob/generated/json/base_list_entity_helper.dart';
import 'package:tob/entity/address/address_list_entity.dart';
import 'package:tob/generated/json/address_list_entity_helper.dart';
import 'package:tob/entity/tab_purchase/car_pre_order_entity.dart';
import 'package:tob/generated/json/car_pre_order_entity_helper.dart';
import 'package:tob/entity/tab_purchase/car_order_detail_entity.dart';
import 'package:tob/generated/json/car_order_detail_entity_helper.dart';
import 'package:tob/entity/purchase/purchase_num_entity.dart';
import 'package:tob/generated/json/purchase_num_entity_helper.dart';
import 'package:tob/entity/business/dealer_type_list_entity.dart';
import 'package:tob/generated/json/dealer_type_list_entity_helper.dart';
import 'package:tob/entity/user_info_entity.dart';
import 'package:tob/generated/json/user_info_entity_helper.dart';
import 'package:tob/entity/staff/apply_list_entity.dart';
import 'package:tob/generated/json/apply_list_entity_helper.dart';
import 'package:tob/entity/base_entity.dart';
import 'package:tob/generated/json/base_entity_helper.dart';
import 'package:tob/entity/tab_purchase/car_file_image_entity.dart';
import 'package:tob/generated/json/car_file_image_entity_helper.dart';
import 'package:tob/entity/purchase/purchase_receive_entity.dart';
import 'package:tob/generated/json/purchase_receive_entity_helper.dart';
import 'package:tob/entity/notice/notice_count_entity.dart';
import 'package:tob/generated/json/notice_count_entity_helper.dart';
import 'package:tob/entity/purchase/purchase_submit_entity.dart';
import 'package:tob/generated/json/purchase_submit_entity_helper.dart';
import 'package:tob/entity/tab_purchase/car_order_list_entity.dart';
import 'package:tob/generated/json/car_order_list_entity_helper.dart';
import 'package:tob/entity/purchase/purchase_receive_list_entity.dart';
import 'package:tob/generated/json/purchase_receive_list_entity_helper.dart';
import 'package:tob/entity/purchase/purchase_pre_entity.dart';
import 'package:tob/generated/json/purchase_pre_entity_helper.dart';
import 'package:tob/entity/order/order_list_entity.dart';
import 'package:tob/generated/json/order_list_entity_helper.dart';
import 'package:tob/entity/tab_purchase/car_receive_list_entity.dart';
import 'package:tob/generated/json/car_receive_list_entity_helper.dart';
import 'package:tob/entity/vip/legal_right_entity.dart';
import 'package:tob/generated/json/legal_right_entity_helper.dart';
import 'package:tob/entity/tab_purchase/tab_purchase_list_entity.dart';
import 'package:tob/generated/json/tab_purchase_list_entity_helper.dart';
import 'package:tob/entity/purchase/purchase_file_image_entity.dart';
import 'package:tob/generated/json/purchase_file_image_entity_helper.dart';

class JsonConvert<T> {
	T fromJson(Map<String, dynamic> json) {
		return _getFromJson<T>(runtimeType, this, json);
	}

  Map<String, dynamic> toJson() {
		return _getToJson<T>(runtimeType, this);
  }

  static _getFromJson<T>(Type type, data, json) {
		switch (type) {
			case CarFileListEntity:
				return carFileListEntityFromJson(data as CarFileListEntity, json) as T;
			case CarFileListVin:
				return carFileListVinFromJson(data as CarFileListVin, json) as T;
			case BankAccountEntity:
				return bankAccountEntityFromJson(data as BankAccountEntity, json) as T;
			case HomeDataEntity:
				return homeDataEntityFromJson(data as HomeDataEntity, json) as T;
			case OrderDetailEntity:
				return orderDetailEntityFromJson(data as OrderDetailEntity, json) as T;
			case OrderDetailDetail:
				return orderDetailDetailFromJson(data as OrderDetailDetail, json) as T;
			case OrderDetailContract:
				return orderDetailContractFromJson(data as OrderDetailContract, json) as T;
			case AddressSingleEntity:
				return addressSingleEntityFromJson(data as AddressSingleEntity, json) as T;
			case PurchaseFileEntity:
				return purchaseFileEntityFromJson(data as PurchaseFileEntity, json) as T;
			case CityChoseEntity:
				return cityChoseEntityFromJson(data as CityChoseEntity, json) as T;
			case CityChoseChild:
				return cityChoseChildFromJson(data as CityChoseChild, json) as T;
			case CityChoseChildChild:
				return cityChoseChildChildFromJson(data as CityChoseChildChild, json) as T;
			case ImgEntity:
				return imgEntityFromJson(data as ImgEntity, json) as T;
			case BaseInfoEntity:
				return baseInfoEntityFromJson(data as BaseInfoEntity, json) as T;
			case BaseInfoMail:
				return baseInfoMailFromJson(data as BaseInfoMail, json) as T;
			case StaffListEntity:
				return staffListEntityFromJson(data as StaffListEntity, json) as T;
			case StaffListList:
				return staffListListFromJson(data as StaffListList, json) as T;
			case NoticeListEntity:
				return noticeListEntityFromJson(data as NoticeListEntity, json) as T;
			case NoticeListList:
				return noticeListListFromJson(data as NoticeListList, json) as T;
			case NoticeDetailEntity:
				return noticeDetailEntityFromJson(data as NoticeDetailEntity, json) as T;
			case CompanyEntity:
				return companyEntityFromJson(data as CompanyEntity, json) as T;
			case CarFileDetailEntity:
				return carFileDetailEntityFromJson(data as CarFileDetailEntity, json) as T;
			case PurchaseDetailEntity:
				return purchaseDetailEntityFromJson(data as PurchaseDetailEntity, json) as T;
			case PurchaseDetailSpecs:
				return purchaseDetailSpecsFromJson(data as PurchaseDetailSpecs, json) as T;
			case SmsEntity:
				return smsEntityFromJson(data as SmsEntity, json) as T;
			case PurchaseFileListEntity:
				return purchaseFileListEntityFromJson(data as PurchaseFileListEntity, json) as T;
			case PurchaseFileListVin:
				return purchaseFileListVinFromJson(data as PurchaseFileListVin, json) as T;
			case PurchaseListEntity:
				return purchaseListEntityFromJson(data as PurchaseListEntity, json) as T;
			case PurchaseListList:
				return purchaseListListFromJson(data as PurchaseListList, json) as T;
			case PurchaseListListSpecs:
				return purchaseListListSpecsFromJson(data as PurchaseListListSpecs, json) as T;
			case CarReceiveDetailEntity:
				return carReceiveDetailEntityFromJson(data as CarReceiveDetailEntity, json) as T;
			case UpdateEntity:
				return updateEntityFromJson(data as UpdateEntity, json) as T;
			case ContractEntity:
				return contractEntityFromJson(data as ContractEntity, json) as T;
			case ContractContract:
				return contractContractFromJson(data as ContractContract, json) as T;
			case ContractMain:
				return contractMainFromJson(data as ContractMain, json) as T;
			case BankEntity:
				return bankEntityFromJson(data as BankEntity, json) as T;
			case BaseDataEntity:
				return baseDataEntityFromJson(data as BaseDataEntity, json) as T;
			case BaseListEntity:
				return baseListEntityFromJson(data as BaseListEntity, json) as T;
			case AddressListEntity:
				return addressListEntityFromJson(data as AddressListEntity, json) as T;
			case AddressListList:
				return addressListListFromJson(data as AddressListList, json) as T;
			case CarPreOrderEntity:
				return carPreOrderEntityFromJson(data as CarPreOrderEntity, json) as T;
			case CarPreOrderColors:
				return carPreOrderColorsFromJson(data as CarPreOrderColors, json) as T;
			case CarOrderDetailEntity:
				return carOrderDetailEntityFromJson(data as CarOrderDetailEntity, json) as T;
			case CarOrderDetailColors:
				return carOrderDetailColorsFromJson(data as CarOrderDetailColors, json) as T;
			case CarOrderDetailCar:
				return carOrderDetailCarFromJson(data as CarOrderDetailCar, json) as T;
			case CarOrderDetailContract:
				return carOrderDetailContractFromJson(data as CarOrderDetailContract, json) as T;
			case PurchaseNumEntity:
				return purchaseNumEntityFromJson(data as PurchaseNumEntity, json) as T;
			case DealerTypeListEntity:
				return dealerTypeListEntityFromJson(data as DealerTypeListEntity, json) as T;
			case UserInfoEntity:
				return userInfoEntityFromJson(data as UserInfoEntity, json) as T;
			case UserInfoDealer:
				return userInfoDealerFromJson(data as UserInfoDealer, json) as T;
			case UserInfoDealerApply:
				return userInfoDealerApplyFromJson(data as UserInfoDealerApply, json) as T;
			case ApplyListEntity:
				return applyListEntityFromJson(data as ApplyListEntity, json) as T;
			case ApplyListList:
				return applyListListFromJson(data as ApplyListList, json) as T;
			case BaseEntity:
				return baseEntityFromJson(data as BaseEntity, json) as T;
			case CarFileImageEntity:
				return carFileImageEntityFromJson(data as CarFileImageEntity, json) as T;
			case CarFileImageChild:
				return carFileImageChildFromJson(data as CarFileImageChild, json) as T;
			case PurchaseReceiveEntity:
				return purchaseReceiveEntityFromJson(data as PurchaseReceiveEntity, json) as T;
			case NoticeCountEntity:
				return noticeCountEntityFromJson(data as NoticeCountEntity, json) as T;
			case PurchaseSubmitEntity:
				return purchaseSubmitEntityFromJson(data as PurchaseSubmitEntity, json) as T;
			case CarOrderListEntity:
				return carOrderListEntityFromJson(data as CarOrderListEntity, json) as T;
			case CarOrderListList:
				return carOrderListListFromJson(data as CarOrderListList, json) as T;
			case CarOrderListListColors:
				return carOrderListListColorsFromJson(data as CarOrderListListColors, json) as T;
			case CarOrderListListContract:
				return carOrderListListContractFromJson(data as CarOrderListListContract, json) as T;
			case PurchaseReceiveListEntity:
				return purchaseReceiveListEntityFromJson(data as PurchaseReceiveListEntity, json) as T;
			case PurchaseReceiveListList:
				return purchaseReceiveListListFromJson(data as PurchaseReceiveListList, json) as T;
			case PurchasePreEntity:
				return purchasePreEntityFromJson(data as PurchasePreEntity, json) as T;
			case OrderListEntity:
				return orderListEntityFromJson(data as OrderListEntity, json) as T;
			case OrderListList:
				return orderListListFromJson(data as OrderListList, json) as T;
			case OrderListListDetail:
				return orderListListDetailFromJson(data as OrderListListDetail, json) as T;
			case CarReceiveListEntity:
				return carReceiveListEntityFromJson(data as CarReceiveListEntity, json) as T;
			case CarReceiveListList:
				return carReceiveListListFromJson(data as CarReceiveListList, json) as T;
			case LegalRightEntity:
				return legalRightEntityFromJson(data as LegalRightEntity, json) as T;
			case TabPurchaseListEntity:
				return tabPurchaseListEntityFromJson(data as TabPurchaseListEntity, json) as T;
			case TabPurchaseListList:
				return tabPurchaseListListFromJson(data as TabPurchaseListList, json) as T;
			case TabPurchaseListListCars:
				return tabPurchaseListListCarsFromJson(data as TabPurchaseListListCars, json) as T;
			case TabPurchaseListListColors:
				return tabPurchaseListListColorsFromJson(data as TabPurchaseListListColors, json) as T;
			case PurchaseFileImageEntity:
				return purchaseFileImageEntityFromJson(data as PurchaseFileImageEntity, json) as T;
			case PurchaseFileImageChild:
				return purchaseFileImageChildFromJson(data as PurchaseFileImageChild, json) as T;    }
		return data as T;
	}

  static _getToJson<T>(Type type, data) {
		switch (type) {
			case CarFileListEntity:
				return carFileListEntityToJson(data as CarFileListEntity);
			case CarFileListVin:
				return carFileListVinToJson(data as CarFileListVin);
			case BankAccountEntity:
				return bankAccountEntityToJson(data as BankAccountEntity);
			case HomeDataEntity:
				return homeDataEntityToJson(data as HomeDataEntity);
			case OrderDetailEntity:
				return orderDetailEntityToJson(data as OrderDetailEntity);
			case OrderDetailDetail:
				return orderDetailDetailToJson(data as OrderDetailDetail);
			case OrderDetailContract:
				return orderDetailContractToJson(data as OrderDetailContract);
			case AddressSingleEntity:
				return addressSingleEntityToJson(data as AddressSingleEntity);
			case PurchaseFileEntity:
				return purchaseFileEntityToJson(data as PurchaseFileEntity);
			case CityChoseEntity:
				return cityChoseEntityToJson(data as CityChoseEntity);
			case CityChoseChild:
				return cityChoseChildToJson(data as CityChoseChild);
			case CityChoseChildChild:
				return cityChoseChildChildToJson(data as CityChoseChildChild);
			case ImgEntity:
				return imgEntityToJson(data as ImgEntity);
			case BaseInfoEntity:
				return baseInfoEntityToJson(data as BaseInfoEntity);
			case BaseInfoMail:
				return baseInfoMailToJson(data as BaseInfoMail);
			case StaffListEntity:
				return staffListEntityToJson(data as StaffListEntity);
			case StaffListList:
				return staffListListToJson(data as StaffListList);
			case NoticeListEntity:
				return noticeListEntityToJson(data as NoticeListEntity);
			case NoticeListList:
				return noticeListListToJson(data as NoticeListList);
			case NoticeDetailEntity:
				return noticeDetailEntityToJson(data as NoticeDetailEntity);
			case CompanyEntity:
				return companyEntityToJson(data as CompanyEntity);
			case CarFileDetailEntity:
				return carFileDetailEntityToJson(data as CarFileDetailEntity);
			case PurchaseDetailEntity:
				return purchaseDetailEntityToJson(data as PurchaseDetailEntity);
			case PurchaseDetailSpecs:
				return purchaseDetailSpecsToJson(data as PurchaseDetailSpecs);
			case SmsEntity:
				return smsEntityToJson(data as SmsEntity);
			case PurchaseFileListEntity:
				return purchaseFileListEntityToJson(data as PurchaseFileListEntity);
			case PurchaseFileListVin:
				return purchaseFileListVinToJson(data as PurchaseFileListVin);
			case PurchaseListEntity:
				return purchaseListEntityToJson(data as PurchaseListEntity);
			case PurchaseListList:
				return purchaseListListToJson(data as PurchaseListList);
			case PurchaseListListSpecs:
				return purchaseListListSpecsToJson(data as PurchaseListListSpecs);
			case CarReceiveDetailEntity:
				return carReceiveDetailEntityToJson(data as CarReceiveDetailEntity);
			case UpdateEntity:
				return updateEntityToJson(data as UpdateEntity);
			case ContractEntity:
				return contractEntityToJson(data as ContractEntity);
			case ContractContract:
				return contractContractToJson(data as ContractContract);
			case ContractMain:
				return contractMainToJson(data as ContractMain);
			case BankEntity:
				return bankEntityToJson(data as BankEntity);
			case BaseDataEntity:
				return baseDataEntityToJson(data as BaseDataEntity);
			case BaseListEntity:
				return baseListEntityToJson(data as BaseListEntity);
			case AddressListEntity:
				return addressListEntityToJson(data as AddressListEntity);
			case AddressListList:
				return addressListListToJson(data as AddressListList);
			case CarPreOrderEntity:
				return carPreOrderEntityToJson(data as CarPreOrderEntity);
			case CarPreOrderColors:
				return carPreOrderColorsToJson(data as CarPreOrderColors);
			case CarOrderDetailEntity:
				return carOrderDetailEntityToJson(data as CarOrderDetailEntity);
			case CarOrderDetailColors:
				return carOrderDetailColorsToJson(data as CarOrderDetailColors);
			case CarOrderDetailCar:
				return carOrderDetailCarToJson(data as CarOrderDetailCar);
			case CarOrderDetailContract:
				return carOrderDetailContractToJson(data as CarOrderDetailContract);
			case PurchaseNumEntity:
				return purchaseNumEntityToJson(data as PurchaseNumEntity);
			case DealerTypeListEntity:
				return dealerTypeListEntityToJson(data as DealerTypeListEntity);
			case UserInfoEntity:
				return userInfoEntityToJson(data as UserInfoEntity);
			case UserInfoDealer:
				return userInfoDealerToJson(data as UserInfoDealer);
			case UserInfoDealerApply:
				return userInfoDealerApplyToJson(data as UserInfoDealerApply);
			case ApplyListEntity:
				return applyListEntityToJson(data as ApplyListEntity);
			case ApplyListList:
				return applyListListToJson(data as ApplyListList);
			case BaseEntity:
				return baseEntityToJson(data as BaseEntity);
			case CarFileImageEntity:
				return carFileImageEntityToJson(data as CarFileImageEntity);
			case CarFileImageChild:
				return carFileImageChildToJson(data as CarFileImageChild);
			case PurchaseReceiveEntity:
				return purchaseReceiveEntityToJson(data as PurchaseReceiveEntity);
			case NoticeCountEntity:
				return noticeCountEntityToJson(data as NoticeCountEntity);
			case PurchaseSubmitEntity:
				return purchaseSubmitEntityToJson(data as PurchaseSubmitEntity);
			case CarOrderListEntity:
				return carOrderListEntityToJson(data as CarOrderListEntity);
			case CarOrderListList:
				return carOrderListListToJson(data as CarOrderListList);
			case CarOrderListListColors:
				return carOrderListListColorsToJson(data as CarOrderListListColors);
			case CarOrderListListContract:
				return carOrderListListContractToJson(data as CarOrderListListContract);
			case PurchaseReceiveListEntity:
				return purchaseReceiveListEntityToJson(data as PurchaseReceiveListEntity);
			case PurchaseReceiveListList:
				return purchaseReceiveListListToJson(data as PurchaseReceiveListList);
			case PurchasePreEntity:
				return purchasePreEntityToJson(data as PurchasePreEntity);
			case OrderListEntity:
				return orderListEntityToJson(data as OrderListEntity);
			case OrderListList:
				return orderListListToJson(data as OrderListList);
			case OrderListListDetail:
				return orderListListDetailToJson(data as OrderListListDetail);
			case CarReceiveListEntity:
				return carReceiveListEntityToJson(data as CarReceiveListEntity);
			case CarReceiveListList:
				return carReceiveListListToJson(data as CarReceiveListList);
			case LegalRightEntity:
				return legalRightEntityToJson(data as LegalRightEntity);
			case TabPurchaseListEntity:
				return tabPurchaseListEntityToJson(data as TabPurchaseListEntity);
			case TabPurchaseListList:
				return tabPurchaseListListToJson(data as TabPurchaseListList);
			case TabPurchaseListListCars:
				return tabPurchaseListListCarsToJson(data as TabPurchaseListListCars);
			case TabPurchaseListListColors:
				return tabPurchaseListListColorsToJson(data as TabPurchaseListListColors);
			case PurchaseFileImageEntity:
				return purchaseFileImageEntityToJson(data as PurchaseFileImageEntity);
			case PurchaseFileImageChild:
				return purchaseFileImageChildToJson(data as PurchaseFileImageChild);
			}
			return data as T;
		}
  //Go back to a single instance by type
	static _fromJsonSingle<M>( json) {
		String type = M.toString();
		if(type == (CarFileListEntity).toString()){
			return CarFileListEntity().fromJson(json);
		}
		if(type == (CarFileListVin).toString()){
			return CarFileListVin().fromJson(json);
		}
		if(type == (BankAccountEntity).toString()){
			return BankAccountEntity().fromJson(json);
		}
		if(type == (HomeDataEntity).toString()){
			return HomeDataEntity().fromJson(json);
		}
		if(type == (OrderDetailEntity).toString()){
			return OrderDetailEntity().fromJson(json);
		}
		if(type == (OrderDetailDetail).toString()){
			return OrderDetailDetail().fromJson(json);
		}
		if(type == (OrderDetailContract).toString()){
			return OrderDetailContract().fromJson(json);
		}
		if(type == (AddressSingleEntity).toString()){
			return AddressSingleEntity().fromJson(json);
		}
		if(type == (PurchaseFileEntity).toString()){
			return PurchaseFileEntity().fromJson(json);
		}
		if(type == (CityChoseEntity).toString()){
			return CityChoseEntity().fromJson(json);
		}
		if(type == (CityChoseChild).toString()){
			return CityChoseChild().fromJson(json);
		}
		if(type == (CityChoseChildChild).toString()){
			return CityChoseChildChild().fromJson(json);
		}
		if(type == (ImgEntity).toString()){
			return ImgEntity().fromJson(json);
		}
		if(type == (BaseInfoEntity).toString()){
			return BaseInfoEntity().fromJson(json);
		}
		if(type == (BaseInfoMail).toString()){
			return BaseInfoMail().fromJson(json);
		}
		if(type == (StaffListEntity).toString()){
			return StaffListEntity().fromJson(json);
		}
		if(type == (StaffListList).toString()){
			return StaffListList().fromJson(json);
		}
		if(type == (NoticeListEntity).toString()){
			return NoticeListEntity().fromJson(json);
		}
		if(type == (NoticeListList).toString()){
			return NoticeListList().fromJson(json);
		}
		if(type == (NoticeDetailEntity).toString()){
			return NoticeDetailEntity().fromJson(json);
		}
		if(type == (CompanyEntity).toString()){
			return CompanyEntity().fromJson(json);
		}
		if(type == (CarFileDetailEntity).toString()){
			return CarFileDetailEntity().fromJson(json);
		}
		if(type == (PurchaseDetailEntity).toString()){
			return PurchaseDetailEntity().fromJson(json);
		}
		if(type == (PurchaseDetailSpecs).toString()){
			return PurchaseDetailSpecs().fromJson(json);
		}
		if(type == (SmsEntity).toString()){
			return SmsEntity().fromJson(json);
		}
		if(type == (PurchaseFileListEntity).toString()){
			return PurchaseFileListEntity().fromJson(json);
		}
		if(type == (PurchaseFileListVin).toString()){
			return PurchaseFileListVin().fromJson(json);
		}
		if(type == (PurchaseListEntity).toString()){
			return PurchaseListEntity().fromJson(json);
		}
		if(type == (PurchaseListList).toString()){
			return PurchaseListList().fromJson(json);
		}
		if(type == (PurchaseListListSpecs).toString()){
			return PurchaseListListSpecs().fromJson(json);
		}
		if(type == (CarReceiveDetailEntity).toString()){
			return CarReceiveDetailEntity().fromJson(json);
		}
		if(type == (UpdateEntity).toString()){
			return UpdateEntity().fromJson(json);
		}
		if(type == (ContractEntity).toString()){
			return ContractEntity().fromJson(json);
		}
		if(type == (ContractContract).toString()){
			return ContractContract().fromJson(json);
		}
		if(type == (ContractMain).toString()){
			return ContractMain().fromJson(json);
		}
		if(type == (BankEntity).toString()){
			return BankEntity().fromJson(json);
		}
		if(type == (BaseDataEntity).toString()){
			return BaseDataEntity().fromJson(json);
		}
		if(type == (BaseListEntity).toString()){
			return BaseListEntity().fromJson(json);
		}
		if(type == (AddressListEntity).toString()){
			return AddressListEntity().fromJson(json);
		}
		if(type == (AddressListList).toString()){
			return AddressListList().fromJson(json);
		}
		if(type == (CarPreOrderEntity).toString()){
			return CarPreOrderEntity().fromJson(json);
		}
		if(type == (CarPreOrderColors).toString()){
			return CarPreOrderColors().fromJson(json);
		}
		if(type == (CarOrderDetailEntity).toString()){
			return CarOrderDetailEntity().fromJson(json);
		}
		if(type == (CarOrderDetailColors).toString()){
			return CarOrderDetailColors().fromJson(json);
		}
		if(type == (CarOrderDetailCar).toString()){
			return CarOrderDetailCar().fromJson(json);
		}
		if(type == (CarOrderDetailContract).toString()){
			return CarOrderDetailContract().fromJson(json);
		}
		if(type == (PurchaseNumEntity).toString()){
			return PurchaseNumEntity().fromJson(json);
		}
		if(type == (DealerTypeListEntity).toString()){
			return DealerTypeListEntity().fromJson(json);
		}
		if(type == (UserInfoEntity).toString()){
			return UserInfoEntity().fromJson(json);
		}
		if(type == (UserInfoDealer).toString()){
			return UserInfoDealer().fromJson(json);
		}
		if(type == (UserInfoDealerApply).toString()){
			return UserInfoDealerApply().fromJson(json);
		}
		if(type == (ApplyListEntity).toString()){
			return ApplyListEntity().fromJson(json);
		}
		if(type == (ApplyListList).toString()){
			return ApplyListList().fromJson(json);
		}
		if(type == (BaseEntity).toString()){
			return BaseEntity().fromJson(json);
		}
		if(type == (CarFileImageEntity).toString()){
			return CarFileImageEntity().fromJson(json);
		}
		if(type == (CarFileImageChild).toString()){
			return CarFileImageChild().fromJson(json);
		}
		if(type == (PurchaseReceiveEntity).toString()){
			return PurchaseReceiveEntity().fromJson(json);
		}
		if(type == (NoticeCountEntity).toString()){
			return NoticeCountEntity().fromJson(json);
		}
		if(type == (PurchaseSubmitEntity).toString()){
			return PurchaseSubmitEntity().fromJson(json);
		}
		if(type == (CarOrderListEntity).toString()){
			return CarOrderListEntity().fromJson(json);
		}
		if(type == (CarOrderListList).toString()){
			return CarOrderListList().fromJson(json);
		}
		if(type == (CarOrderListListColors).toString()){
			return CarOrderListListColors().fromJson(json);
		}
		if(type == (CarOrderListListContract).toString()){
			return CarOrderListListContract().fromJson(json);
		}
		if(type == (PurchaseReceiveListEntity).toString()){
			return PurchaseReceiveListEntity().fromJson(json);
		}
		if(type == (PurchaseReceiveListList).toString()){
			return PurchaseReceiveListList().fromJson(json);
		}
		if(type == (PurchasePreEntity).toString()){
			return PurchasePreEntity().fromJson(json);
		}
		if(type == (OrderListEntity).toString()){
			return OrderListEntity().fromJson(json);
		}
		if(type == (OrderListList).toString()){
			return OrderListList().fromJson(json);
		}
		if(type == (OrderListListDetail).toString()){
			return OrderListListDetail().fromJson(json);
		}
		if(type == (CarReceiveListEntity).toString()){
			return CarReceiveListEntity().fromJson(json);
		}
		if(type == (CarReceiveListList).toString()){
			return CarReceiveListList().fromJson(json);
		}
		if(type == (LegalRightEntity).toString()){
			return LegalRightEntity().fromJson(json);
		}
		if(type == (TabPurchaseListEntity).toString()){
			return TabPurchaseListEntity().fromJson(json);
		}
		if(type == (TabPurchaseListList).toString()){
			return TabPurchaseListList().fromJson(json);
		}
		if(type == (TabPurchaseListListCars).toString()){
			return TabPurchaseListListCars().fromJson(json);
		}
		if(type == (TabPurchaseListListColors).toString()){
			return TabPurchaseListListColors().fromJson(json);
		}
		if(type == (PurchaseFileImageEntity).toString()){
			return PurchaseFileImageEntity().fromJson(json);
		}
		if(type == (PurchaseFileImageChild).toString()){
			return PurchaseFileImageChild().fromJson(json);
		}

		return null;
	}

  //list is returned by type
	static M _getListChildType<M>(List data) {
		if(<CarFileListEntity>[] is M){
			return data.map<CarFileListEntity>((e) => CarFileListEntity().fromJson(e)).toList() as M;
		}
		if(<CarFileListVin>[] is M){
			return data.map<CarFileListVin>((e) => CarFileListVin().fromJson(e)).toList() as M;
		}
		if(<BankAccountEntity>[] is M){
			return data.map<BankAccountEntity>((e) => BankAccountEntity().fromJson(e)).toList() as M;
		}
		if(<HomeDataEntity>[] is M){
			return data.map<HomeDataEntity>((e) => HomeDataEntity().fromJson(e)).toList() as M;
		}
		if(<OrderDetailEntity>[] is M){
			return data.map<OrderDetailEntity>((e) => OrderDetailEntity().fromJson(e)).toList() as M;
		}
		if(<OrderDetailDetail>[] is M){
			return data.map<OrderDetailDetail>((e) => OrderDetailDetail().fromJson(e)).toList() as M;
		}
		if(<OrderDetailContract>[] is M){
			return data.map<OrderDetailContract>((e) => OrderDetailContract().fromJson(e)).toList() as M;
		}
		if(<AddressSingleEntity>[] is M){
			return data.map<AddressSingleEntity>((e) => AddressSingleEntity().fromJson(e)).toList() as M;
		}
		if(<PurchaseFileEntity>[] is M){
			return data.map<PurchaseFileEntity>((e) => PurchaseFileEntity().fromJson(e)).toList() as M;
		}
		if(<CityChoseEntity>[] is M){
			return data.map<CityChoseEntity>((e) => CityChoseEntity().fromJson(e)).toList() as M;
		}
		if(<CityChoseChild>[] is M){
			return data.map<CityChoseChild>((e) => CityChoseChild().fromJson(e)).toList() as M;
		}
		if(<CityChoseChildChild>[] is M){
			return data.map<CityChoseChildChild>((e) => CityChoseChildChild().fromJson(e)).toList() as M;
		}
		if(<ImgEntity>[] is M){
			return data.map<ImgEntity>((e) => ImgEntity().fromJson(e)).toList() as M;
		}
		if(<BaseInfoEntity>[] is M){
			return data.map<BaseInfoEntity>((e) => BaseInfoEntity().fromJson(e)).toList() as M;
		}
		if(<BaseInfoMail>[] is M){
			return data.map<BaseInfoMail>((e) => BaseInfoMail().fromJson(e)).toList() as M;
		}
		if(<StaffListEntity>[] is M){
			return data.map<StaffListEntity>((e) => StaffListEntity().fromJson(e)).toList() as M;
		}
		if(<StaffListList>[] is M){
			return data.map<StaffListList>((e) => StaffListList().fromJson(e)).toList() as M;
		}
		if(<NoticeListEntity>[] is M){
			return data.map<NoticeListEntity>((e) => NoticeListEntity().fromJson(e)).toList() as M;
		}
		if(<NoticeListList>[] is M){
			return data.map<NoticeListList>((e) => NoticeListList().fromJson(e)).toList() as M;
		}
		if(<NoticeDetailEntity>[] is M){
			return data.map<NoticeDetailEntity>((e) => NoticeDetailEntity().fromJson(e)).toList() as M;
		}
		if(<CompanyEntity>[] is M){
			return data.map<CompanyEntity>((e) => CompanyEntity().fromJson(e)).toList() as M;
		}
		if(<CarFileDetailEntity>[] is M){
			return data.map<CarFileDetailEntity>((e) => CarFileDetailEntity().fromJson(e)).toList() as M;
		}
		if(<PurchaseDetailEntity>[] is M){
			return data.map<PurchaseDetailEntity>((e) => PurchaseDetailEntity().fromJson(e)).toList() as M;
		}
		if(<PurchaseDetailSpecs>[] is M){
			return data.map<PurchaseDetailSpecs>((e) => PurchaseDetailSpecs().fromJson(e)).toList() as M;
		}
		if(<SmsEntity>[] is M){
			return data.map<SmsEntity>((e) => SmsEntity().fromJson(e)).toList() as M;
		}
		if(<PurchaseFileListEntity>[] is M){
			return data.map<PurchaseFileListEntity>((e) => PurchaseFileListEntity().fromJson(e)).toList() as M;
		}
		if(<PurchaseFileListVin>[] is M){
			return data.map<PurchaseFileListVin>((e) => PurchaseFileListVin().fromJson(e)).toList() as M;
		}
		if(<PurchaseListEntity>[] is M){
			return data.map<PurchaseListEntity>((e) => PurchaseListEntity().fromJson(e)).toList() as M;
		}
		if(<PurchaseListList>[] is M){
			return data.map<PurchaseListList>((e) => PurchaseListList().fromJson(e)).toList() as M;
		}
		if(<PurchaseListListSpecs>[] is M){
			return data.map<PurchaseListListSpecs>((e) => PurchaseListListSpecs().fromJson(e)).toList() as M;
		}
		if(<CarReceiveDetailEntity>[] is M){
			return data.map<CarReceiveDetailEntity>((e) => CarReceiveDetailEntity().fromJson(e)).toList() as M;
		}
		if(<UpdateEntity>[] is M){
			return data.map<UpdateEntity>((e) => UpdateEntity().fromJson(e)).toList() as M;
		}
		if(<ContractEntity>[] is M){
			return data.map<ContractEntity>((e) => ContractEntity().fromJson(e)).toList() as M;
		}
		if(<ContractContract>[] is M){
			return data.map<ContractContract>((e) => ContractContract().fromJson(e)).toList() as M;
		}
		if(<ContractMain>[] is M){
			return data.map<ContractMain>((e) => ContractMain().fromJson(e)).toList() as M;
		}
		if(<BankEntity>[] is M){
			return data.map<BankEntity>((e) => BankEntity().fromJson(e)).toList() as M;
		}
		if(<BaseDataEntity>[] is M){
			return data.map<BaseDataEntity>((e) => BaseDataEntity().fromJson(e)).toList() as M;
		}
		if(<BaseListEntity>[] is M){
			return data.map<BaseListEntity>((e) => BaseListEntity().fromJson(e)).toList() as M;
		}
		if(<AddressListEntity>[] is M){
			return data.map<AddressListEntity>((e) => AddressListEntity().fromJson(e)).toList() as M;
		}
		if(<AddressListList>[] is M){
			return data.map<AddressListList>((e) => AddressListList().fromJson(e)).toList() as M;
		}
		if(<CarPreOrderEntity>[] is M){
			return data.map<CarPreOrderEntity>((e) => CarPreOrderEntity().fromJson(e)).toList() as M;
		}
		if(<CarPreOrderColors>[] is M){
			return data.map<CarPreOrderColors>((e) => CarPreOrderColors().fromJson(e)).toList() as M;
		}
		if(<CarOrderDetailEntity>[] is M){
			return data.map<CarOrderDetailEntity>((e) => CarOrderDetailEntity().fromJson(e)).toList() as M;
		}
		if(<CarOrderDetailColors>[] is M){
			return data.map<CarOrderDetailColors>((e) => CarOrderDetailColors().fromJson(e)).toList() as M;
		}
		if(<CarOrderDetailCar>[] is M){
			return data.map<CarOrderDetailCar>((e) => CarOrderDetailCar().fromJson(e)).toList() as M;
		}
		if(<CarOrderDetailContract>[] is M){
			return data.map<CarOrderDetailContract>((e) => CarOrderDetailContract().fromJson(e)).toList() as M;
		}
		if(<PurchaseNumEntity>[] is M){
			return data.map<PurchaseNumEntity>((e) => PurchaseNumEntity().fromJson(e)).toList() as M;
		}
		if(<DealerTypeListEntity>[] is M){
			return data.map<DealerTypeListEntity>((e) => DealerTypeListEntity().fromJson(e)).toList() as M;
		}
		if(<UserInfoEntity>[] is M){
			return data.map<UserInfoEntity>((e) => UserInfoEntity().fromJson(e)).toList() as M;
		}
		if(<UserInfoDealer>[] is M){
			return data.map<UserInfoDealer>((e) => UserInfoDealer().fromJson(e)).toList() as M;
		}
		if(<UserInfoDealerApply>[] is M){
			return data.map<UserInfoDealerApply>((e) => UserInfoDealerApply().fromJson(e)).toList() as M;
		}
		if(<ApplyListEntity>[] is M){
			return data.map<ApplyListEntity>((e) => ApplyListEntity().fromJson(e)).toList() as M;
		}
		if(<ApplyListList>[] is M){
			return data.map<ApplyListList>((e) => ApplyListList().fromJson(e)).toList() as M;
		}
		if(<BaseEntity>[] is M){
			return data.map<BaseEntity>((e) => BaseEntity().fromJson(e)).toList() as M;
		}
		if(<CarFileImageEntity>[] is M){
			return data.map<CarFileImageEntity>((e) => CarFileImageEntity().fromJson(e)).toList() as M;
		}
		if(<CarFileImageChild>[] is M){
			return data.map<CarFileImageChild>((e) => CarFileImageChild().fromJson(e)).toList() as M;
		}
		if(<PurchaseReceiveEntity>[] is M){
			return data.map<PurchaseReceiveEntity>((e) => PurchaseReceiveEntity().fromJson(e)).toList() as M;
		}
		if(<NoticeCountEntity>[] is M){
			return data.map<NoticeCountEntity>((e) => NoticeCountEntity().fromJson(e)).toList() as M;
		}
		if(<PurchaseSubmitEntity>[] is M){
			return data.map<PurchaseSubmitEntity>((e) => PurchaseSubmitEntity().fromJson(e)).toList() as M;
		}
		if(<CarOrderListEntity>[] is M){
			return data.map<CarOrderListEntity>((e) => CarOrderListEntity().fromJson(e)).toList() as M;
		}
		if(<CarOrderListList>[] is M){
			return data.map<CarOrderListList>((e) => CarOrderListList().fromJson(e)).toList() as M;
		}
		if(<CarOrderListListColors>[] is M){
			return data.map<CarOrderListListColors>((e) => CarOrderListListColors().fromJson(e)).toList() as M;
		}
		if(<CarOrderListListContract>[] is M){
			return data.map<CarOrderListListContract>((e) => CarOrderListListContract().fromJson(e)).toList() as M;
		}
		if(<PurchaseReceiveListEntity>[] is M){
			return data.map<PurchaseReceiveListEntity>((e) => PurchaseReceiveListEntity().fromJson(e)).toList() as M;
		}
		if(<PurchaseReceiveListList>[] is M){
			return data.map<PurchaseReceiveListList>((e) => PurchaseReceiveListList().fromJson(e)).toList() as M;
		}
		if(<PurchasePreEntity>[] is M){
			return data.map<PurchasePreEntity>((e) => PurchasePreEntity().fromJson(e)).toList() as M;
		}
		if(<OrderListEntity>[] is M){
			return data.map<OrderListEntity>((e) => OrderListEntity().fromJson(e)).toList() as M;
		}
		if(<OrderListList>[] is M){
			return data.map<OrderListList>((e) => OrderListList().fromJson(e)).toList() as M;
		}
		if(<OrderListListDetail>[] is M){
			return data.map<OrderListListDetail>((e) => OrderListListDetail().fromJson(e)).toList() as M;
		}
		if(<CarReceiveListEntity>[] is M){
			return data.map<CarReceiveListEntity>((e) => CarReceiveListEntity().fromJson(e)).toList() as M;
		}
		if(<CarReceiveListList>[] is M){
			return data.map<CarReceiveListList>((e) => CarReceiveListList().fromJson(e)).toList() as M;
		}
		if(<LegalRightEntity>[] is M){
			return data.map<LegalRightEntity>((e) => LegalRightEntity().fromJson(e)).toList() as M;
		}
		if(<TabPurchaseListEntity>[] is M){
			return data.map<TabPurchaseListEntity>((e) => TabPurchaseListEntity().fromJson(e)).toList() as M;
		}
		if(<TabPurchaseListList>[] is M){
			return data.map<TabPurchaseListList>((e) => TabPurchaseListList().fromJson(e)).toList() as M;
		}
		if(<TabPurchaseListListCars>[] is M){
			return data.map<TabPurchaseListListCars>((e) => TabPurchaseListListCars().fromJson(e)).toList() as M;
		}
		if(<TabPurchaseListListColors>[] is M){
			return data.map<TabPurchaseListListColors>((e) => TabPurchaseListListColors().fromJson(e)).toList() as M;
		}
		if(<PurchaseFileImageEntity>[] is M){
			return data.map<PurchaseFileImageEntity>((e) => PurchaseFileImageEntity().fromJson(e)).toList() as M;
		}
		if(<PurchaseFileImageChild>[] is M){
			return data.map<PurchaseFileImageChild>((e) => PurchaseFileImageChild().fromJson(e)).toList() as M;
		}

		throw Exception("not found");
	}

  static M fromJsonAsT<M>(json) {
		if (json is List) {
			return _getListChildType<M>(json);
		} else {
			return _fromJsonSingle<M>(json) as M;
		}
	}
}